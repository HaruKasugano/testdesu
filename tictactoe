import random
board = []
for i in range(9):
    board.append("  ")
for i in range(3):
    print("|" + " |".join(str(x+3*i) for x, m in enumerate(board[i * 3:(i + 1) * 3])) + " |")
valid_moves = []
for x, m in enumerate(board):
    if m == "  ":
        valid_moves.append(x)
# def IntelligentNPCgo():
def RandomNPCgo():
    q = random.choice(valid_moves)
    board[q] = "O "
    valid_moves.remove(q)
def row(board):
    row = []
    for i in range(3):
        row.append([board[i*3+j] for j in range(3)])
    return row
def column(board):
    column = []
    for i in range(3):
        column.append([board[i+j*3] for j in range(3)])
    return column
def diag(board):
    diag = []
    diag.append([board[i*4] for i in range(3)])
    diag.append([board[i*2] for i in range(1, 4)])
    return diag
def win(c):
    for i in range(3):
        if column(board)[i].count(c)==3:
            return True
        else:
            continue
    for i in range(3):
        if row(board)[i].count(c) == 3:
            return True
        else:
            continue
    for i in range(2):
        if diag(board)[i].count(c) == 3:
            return True
        else:
            continue
    return False
def tie(row, column, diag):
    for i in range(3):
        if "X " in row(board)[i] and "O " in row(board)[i]:
            pass
        else:
            return False
        if "X " in column(board)[i] and "O " in column(board)[i]:
            pass
        else:
            return False
    for i in diag(board):
        if "X " in i and "O " in i:
            pass
        else:
            return False
    return True

while not (win("X ") or win("O ") or tie(row, column, diag)):
    n=int(input("Please input a number to play the game:  "))
    if n in valid_moves:
        board[n]="X "
        valid_moves.remove(n)
        if win("X "):
            for i in range(3):
                print("|" + "|".join(board[i * 3:(i + 1) * 3]) + "|")
            break
        else:
            pass
        if len(valid_moves) > 0:
            RandomNPCgo()
        else:
            pass
        for i in range(3):
            print("|" + "|".join(board[i * 3:(i + 1) * 3]) + "|")
    else:
        print("Invalid play, please try again: ")
if win("X "):
    print("VICTORY")
if win("O "):
    print("DEFEAT")
if tie(row, column, diag):
    print("Tie")
